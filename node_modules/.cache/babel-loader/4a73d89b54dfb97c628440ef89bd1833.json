{"ast":null,"code":"import React from\"react\";import\"./App.css\";import MyRoutes from'./router/MyRoutes.js';import{ConnectionProvider,WalletProvider}from\"@solana/wallet-adapter-react\";import{WalletAdapterNetwork}from\"@solana/wallet-adapter-base\";import{getLedgerWallet,getPhantomWallet,getSlopeWallet,getSolflareWallet,getSolletExtensionWallet,getSolletWallet}from\"@solana/wallet-adapter-wallets\";import{clusterApiUrl}from\"@solana/web3.js\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){// Can be set to 'devnet', 'testnet', or 'mainnet-beta'\nvar network=WalletAdapterNetwork.Mainnet;// You can also provide a custom RPC endpoint\nvar endpoint=React.useMemo(function(){return clusterApiUrl(network);},[network]);// @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking --\n// Only the wallets you configure here will be compiled into your application\nvar wallets=React.useMemo(function(){return[getPhantomWallet(),getSlopeWallet(),getSolflareWallet(),getLedgerWallet(),getSolletWallet({network:network}),getSolletExtensionWallet({network:network})];},[network]);return/*#__PURE__*/_jsx(ConnectionProvider,{endpoint:endpoint,children:/*#__PURE__*/_jsx(WalletProvider,{wallets:wallets,children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(MyRoutes,{})})})});}export default App;","map":{"version":3,"sources":["/home/aaqib/Desktop/Client/hermer/wallet_connection/src/App.tsx"],"names":["React","MyRoutes","ConnectionProvider","WalletProvider","WalletAdapterNetwork","getLedgerWallet","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletExtensionWallet","getSolletWallet","clusterApiUrl","App","network","Mainnet","endpoint","useMemo","wallets"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAgC,OAAhC,CAEA,MAAO,WAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CAEA,OACEC,kBADF,CAEEC,cAFF,KAGO,8BAHP,CAIA,OAASC,oBAAT,KAAqC,6BAArC,CACA,OACEC,eADF,CAEEC,gBAFF,CAGEC,cAHF,CAIEC,iBAJF,CAKEC,wBALF,CAMEC,eANF,KAQO,gCARP,CASA,OAASC,aAAT,KAA8B,iBAA9B,C,2CAEA,QAASC,CAAAA,GAAT,EAAe,CACb;AACA,GAAMC,CAAAA,OAAO,CAAGT,oBAAoB,CAACU,OAArC,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAGf,KAAK,CAACgB,OAAN,CAAc,iBAAML,CAAAA,aAAa,CAACE,OAAD,CAAnB,EAAd,CAA4C,CAACA,OAAD,CAA5C,CAAjB,CAEA;AACA;AACA,GAAMI,CAAAA,OAAO,CAAGjB,KAAK,CAACgB,OAAN,CACd,iBAAM,CACJV,gBAAgB,EADZ,CAEJC,cAAc,EAFV,CAGJC,iBAAiB,EAHb,CAIJH,eAAe,EAJX,CAKJK,eAAe,CAAC,CAAEG,OAAO,CAAPA,OAAF,CAAD,CALX,CAMJJ,wBAAwB,CAAC,CAAEI,OAAO,CAAPA,OAAF,CAAD,CANpB,CAAN,EADc,CASd,CAACA,OAAD,CATc,CAAhB,CAYA,mBACE,KAAC,kBAAD,EAAoB,QAAQ,CAAEE,QAA9B,uBACE,KAAC,cAAD,EAAgB,OAAO,CAAEE,OAAzB,uBACE,YAAK,SAAS,CAAC,KAAf,uBACE,KAAC,QAAD,IADF,EADF,EADF,EADF,CASD,CAED,cAAeL,CAAAA,GAAf","sourcesContent":["import React, { Children } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport MyRoutes from './router/MyRoutes.js';\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from \"@solana/wallet-adapter-react\";\r\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\r\nimport {\r\n  getLedgerWallet,\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n  getSolletExtensionWallet,\r\n  getSolletWallet,\r\n  getTorusWallet,\r\n} from \"@solana/wallet-adapter-wallets\";\r\nimport { clusterApiUrl } from \"@solana/web3.js\"; \r\n\r\nfunction App() {\r\n  // Can be set to 'devnet', 'testnet', or 'mainnet-beta'\r\n  const network = WalletAdapterNetwork.Mainnet;\r\n\r\n  // You can also provide a custom RPC endpoint\r\n  const endpoint = React.useMemo(() => clusterApiUrl(network), [network]);\r\n\r\n  // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking --\r\n  // Only the wallets you configure here will be compiled into your application\r\n  const wallets = React.useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSlopeWallet(),\r\n      getSolflareWallet(),\r\n      getLedgerWallet(),\r\n      getSolletWallet({ network }),\r\n      getSolletExtensionWallet({ network }),\r\n    ],\r\n    [network]\r\n  );\r\n\r\n  return (\r\n    <ConnectionProvider endpoint={endpoint}>\r\n      <WalletProvider wallets={wallets}>\r\n        <div className=\"App\">\r\n          <MyRoutes />  \r\n        </div>\r\n      </WalletProvider>\r\n    </ConnectionProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}